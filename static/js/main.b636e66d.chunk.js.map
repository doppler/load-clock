{"version":3,"sources":["mapDataToState.js","Timer.js","BigLogo.js","Timers.js","ArrowNode.js","Compass.js","Summary.js","WeatherSection.js","App.js","serviceWorker.js","index.js"],"names":["mapDataToState","data","tm1_enabled","tm1_load","tm1_timer","tm1_backgroundColor","tm1_foregroundColor","tm2_enabled","tm2_load","tm2_timer","tm2_backgroundColor","tm2_foregroundColor","tm3_enabled","tm3_load","tm3_timer","tm3_backgroundColor","tm3_foregroundColor","tm4_enabled","tm4_load","tm4_timer","tm4_backgroundColor","tm4_foregroundColor","lastLoadName","windDir","currentWind","h5","h10","h20","lastUpdate","temp","heatindex","windDirString","tm1_slots","tm2_slots","tm3_slots","tm4_slots","_data","Object","toArray","slice","loadsFlownToday","winds","direction","Math","floor","speed","high_5min","high_10min","high_20min","weather","timers","enabled","toLowerCase","load","time","slots","backgroundColor","foregroundColor","filter","timer","Number","parse","prevWindDirections","Timer","_ref","react_default","a","createElement","className","style","color","BigLogo","Timers","length","map","i","src_Timer","key","src_BigLogo","ArrowNode","index","_ref$current","current","fill","id","d","transform","concat","Compass","windTextFgColor","windTextBgColor","xmlns","viewBox","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","src_ArrowNode","fontSize","fontFamily","x","y","textAnchor","Summary","directionString","directionModulo","round","directionStringFromDirection","format","WeatherSection","src_Compass","src_Summary","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","fetch","mode","headers","Content-Type","then","response","json","newState","setState","prevState","toConsumableArray","_this3","window","setInterval","fetchDataAndUpdateState","src_Timers","src_WeatherSection","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b636e66d.chunk.js","sourcesContent":["import parse from \"date-fns/parse\";\n\nconst mapDataToState = data => {\n  let tm1_enabled,\n    tm1_load,\n    tm1_timer,\n    tm1_backgroundColor,\n    tm1_foregroundColor;\n  let tm2_enabled,\n    tm2_load,\n    tm2_timer,\n    tm2_backgroundColor,\n    tm2_foregroundColor;\n  let tm3_enabled,\n    tm3_load,\n    tm3_timer,\n    tm3_backgroundColor,\n    tm3_foregroundColor;\n  let tm4_enabled,\n    tm4_load,\n    tm4_timer,\n    tm4_backgroundColor,\n    tm4_foregroundColor;\n  /* eslint-disable */\n  let lastLoadName, lastLoadTime;\n  let windDir, currentWind;\n  let g1, g5, g10, g20;\n  let h5, h10, h20, h1;\n  let lastUpdate;\n  let temp, humidity, heatindex, raininches, windDirString;\n  /* eslint-enable */\n  let tm1_slots, tm2_slots, tm3_slots, tm4_slots;\n  let rest; //eslint-disable-line\n  [\n    tm1_enabled,\n    tm1_load,\n    tm1_timer,\n    tm1_backgroundColor,\n    tm1_foregroundColor,\n    tm2_enabled,\n    tm2_load,\n    tm2_timer,\n    tm2_backgroundColor,\n    tm2_foregroundColor,\n    tm3_enabled,\n    tm3_load,\n    tm3_timer,\n    tm3_backgroundColor,\n    tm3_foregroundColor,\n    tm4_enabled,\n    tm4_load,\n    tm4_timer,\n    tm4_backgroundColor,\n    tm4_foregroundColor,\n    lastLoadName,\n    lastLoadTime,\n    windDir,\n    currentWind,\n    g1,\n    g5,\n    g10,\n    g20,\n    h5,\n    h10,\n    h20,\n    h1,\n    lastUpdate,\n    temp,\n    humidity,\n    heatindex,\n    raininches,\n    windDirString,\n    tm1_slots,\n    tm2_slots,\n    tm3_slots,\n    tm4_slots,\n    ...rest\n  ] = data;\n\n  const loadsFlownToday = lastLoadName;\n\n  const winds = {\n    direction: Math.floor(windDir),\n    speed: Math.floor(currentWind),\n    high_5min: Math.floor(h5),\n    high_10min: Math.floor(h10),\n    high_20min: Math.floor(h20)\n  };\n\n  const weather = {\n    temp,\n    heatindex,\n    windDirString\n  };\n\n  const timers = [\n    {\n      enabled: tm1_enabled.toLowerCase() === \"true\",\n      load: tm1_load,\n      time: tm1_timer,\n      slots: tm1_slots,\n      backgroundColor: tm1_backgroundColor,\n      foregroundColor: tm1_foregroundColor\n    },\n    {\n      enabled: tm2_enabled.toLowerCase() === \"true\",\n      load: tm2_load,\n      time: tm2_timer,\n      slots: tm2_slots,\n      backgroundColor: tm2_backgroundColor,\n      foregroundColor: tm2_foregroundColor\n    },\n    {\n      enabled: tm3_enabled.toLowerCase() === \"true\",\n      load: tm3_load,\n      time: tm3_timer,\n      slots: tm3_slots,\n      backgroundColor: tm3_backgroundColor,\n      foregroundColor: tm3_foregroundColor\n    },\n    {\n      enabled: tm4_enabled.toLowerCase() === \"true\",\n      load: tm4_load,\n      time: tm4_timer,\n      slots: tm4_slots,\n      backgroundColor: tm4_backgroundColor,\n      foregroundColor: tm4_foregroundColor\n    }\n  ].filter(timer => timer.enabled === true);\n\n  const organizedData = {\n    timers,\n    winds,\n    weather,\n    loadsFlownToday: Number(loadsFlownToday),\n    lastUpdate: parse(lastUpdate),\n    prevWindDirections: []\n  };\n  return organizedData;\n};\n\nexport default mapDataToState;\n","import React from \"react\";\n// import './Timer.css'\n\nconst Timer = ({ load, time, slots, backgroundColor, foregroundColor }) => (\n  <div\n    className=\"Timer\"\n    style={{ backgroundColor: backgroundColor, color: foregroundColor }}\n  >\n    <div className=\"header\">\n      <div className=\"title\">{load}</div>\n      <div className=\"slots\">Slots Remaining: {slots}</div>\n    </div>\n    <div className=\"time\">{time}</div>\n  </div>\n);\n\nexport default Timer;\n","import React from \"react\";\n\nconst BigLogo = () => <div className=\"BigLogo\" />;\n\nexport default BigLogo;\n","import React from \"react\";\nimport Timer from \"./Timer\";\nimport BigLogo from \"./BigLogo\";\n\nconst Timers = ({ timers }) => {\n  return (\n    <div className=\"Timers\">\n      {timers.length > 0 ? (\n        timers.map((timer, i) => (\n          <Timer\n            key={i}\n            load={timer.load}\n            time={timer.time}\n            slots={timer.slots}\n            backgroundColor={timer.backgroundColor}\n            foregroundColor={timer.foregroundColor}\n          />\n        ))\n      ) : (\n        <BigLogo />\n      )}\n    </div>\n  );\n};\n\nexport default Timers;\n","import React from \"react\";\n\nconst ArrowNode = ({ direction, index, current = false }) => {\n  // const fill = index === 0 ? \"rgba(0, 255, 0, 1)\" : \"rgba(255, 255, 0, 0.1)\";\n  const fill = current ? \"rgba(0, 255, 0, 1)\" : \"rgba(255, 255, 0, 0.1)\";\n  return (\n    <g id=\"g_dir\">\n      <path\n        d=\"m64.49988,34.63094l4.9576,-32.42097l4.95763,32.42097l-2.47869,0l0,32.57588l-4.95763,0l0,-32.57588l-2.4789,0l-0.00002,0l0.00001,0z\"\n        fill={fill}\n        transform={`rotate(${direction}, 67, 67)`}\n        id={`dir-${index}`}\n      />\n    </g>\n  );\n};\n\nexport default ArrowNode;\n","import React from \"react\";\nimport ArrowNode from \"./ArrowNode\";\n\nconst Compass = ({ winds, prevWindDirections }) => {\n  let windTextFgColor = \"white\";\n  let windTextBgColor = \"black\";\n\n  if (winds.speed >= 30) {\n    windTextFgColor = \"white\";\n    windTextBgColor = \"red\";\n  } else if (winds.speed >= 22) {\n    windTextFgColor = \"yellow\";\n  }\n\n  return (\n    <div className=\"Compass\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        id=\"svg_compass\"\n        viewBox=\"0,0,135,135\"\n        className=\"svg-content\"\n      >\n        <g>\n          <title>Skydive Wind Compass</title>\n          <g id=\"g11\">\n            <circle\n              cx=\"67\"\n              cy=\"67\"\n              r=\"65\"\n              stroke=\"blue\"\n              strokeWidth=\"2\"\n              fill=\"black\"\n              id=\"svg_1\"\n            />\n            <line\n              x1=\"21\"\n              y1=\"21\"\n              x2=\"26\"\n              y2=\"26\"\n              stroke=\"blue\"\n              strokeWidth=\"3\"\n              id=\"svg_nw\"\n            />\n            <line\n              x1=\"21\"\n              y1=\"113\"\n              x2=\"26\"\n              y2=\"108\"\n              stroke=\"blue\"\n              strokeWidth=\"3\"\n              id=\"svg_sw\"\n            />\n            <line\n              x1=\"113\"\n              y1=\"113\"\n              x2=\"108\"\n              y2=\"108\"\n              stroke=\"blue\"\n              strokeWidth=\"3\"\n              id=\"svg_se\"\n            />\n            <line\n              x1=\"112\"\n              y1=\"21\"\n              x2=\"107\"\n              y2=\"26\"\n              stroke=\"blue\"\n              strokeWidth=\"3\"\n              id=\"svg_ne\"\n            />\n            <line\n              x1=\"8\"\n              y1=\"42\"\n              x2=\"11\"\n              y2=\"44\"\n              stroke=\"blue\"\n              strokeWidth=\"2\"\n              id=\"svg_wnw\"\n            />\n            <line\n              x1=\"43\"\n              y1=\"7\"\n              x2=\"45\"\n              y2=\"11\"\n              stroke=\"blue\"\n              strokeWidth=\"2\"\n              id=\"svg_nnw\"\n            />\n            <line\n              x1=\"7\"\n              y1=\"92\"\n              x2=\"10\"\n              y2=\"90\"\n              stroke=\"blue\"\n              strokeWidth=\"2\"\n              id=\"svg_wsw\"\n            />\n            <line\n              x1=\"91\"\n              y1=\"7\"\n              x2=\"89\"\n              y2=\"11\"\n              stroke=\"blue\"\n              strokeWidth=\"2\"\n              id=\"svg_nne\"\n            />\n            <line\n              x1=\"42\"\n              y1=\"126\"\n              x2=\"44\"\n              y2=\"123\"\n              stroke=\"blue\"\n              strokeWidth=\"2\"\n              id=\"svg_ssw\"\n            />\n            <line\n              x1=\"126\"\n              y1=\"42\"\n              x2=\"123\"\n              y2=\"44\"\n              stroke=\"blue\"\n              strokeWidth=\"2\"\n              id=\"svg_ene\"\n            />\n            <line\n              x1=\"92\"\n              y1=\"126\"\n              x2=\"90\"\n              y2=\"123\"\n              stroke=\"blue\"\n              strokeWidth=\"2\"\n              id=\"svg_sse\"\n            />\n            <line\n              x1=\"126\"\n              y1=\"92\"\n              x2=\"123\"\n              y2=\"90\"\n              stroke=\"blue\"\n              strokeWidth=\"2\"\n              id=\"svg_ese\"\n            />\n            <line\n              x1=\"67\"\n              y1=\"2\"\n              x2=\"67\"\n              y2=\"12\"\n              stroke=\"blue\"\n              strokeWidth=\"3\"\n              id=\"svg_n\"\n            />\n            <line\n              x1=\"67\"\n              y1=\"132\"\n              x2=\"67\"\n              y2=\"122\"\n              stroke=\"blue\"\n              strokeWidth=\"3\"\n              id=\"svg_s\"\n            />\n            <line\n              x1=\"132\"\n              y1=\"67\"\n              x2=\"122\"\n              y2=\"67\"\n              stroke=\"blue\"\n              strokeWidth=\"3\"\n              id=\"svg_e\"\n            />\n            <line\n              x1=\"2\"\n              y1=\"67\"\n              x2=\"12\"\n              y2=\"67\"\n              stroke=\"blue\"\n              strokeWidth=\"3\"\n              id=\"svg_w\"\n            />\n\n            {prevWindDirections.map((direction, index) => {\n              return (\n                <ArrowNode key={index} direction={direction} index={index} />\n              );\n            })}\n\n            <ArrowNode direction={winds.direction} current={true} />\n\n            <text\n              fontSize=\"15\"\n              fontFamily=\"Sans-serif\"\n              x=\"62\"\n              y=\"27\"\n              fill=\"white\"\n              id=\"svg_3\"\n            >\n              N\n            </text>\n            <text\n              fontSize=\"15\"\n              fontFamily=\"Sans-serif\"\n              x=\"62\"\n              y=\"117\"\n              fill=\"white\"\n              id=\"svg_5\"\n            >\n              S\n            </text>\n            <text\n              fontSize=\"15\"\n              fontFamily=\"Sans-serif\"\n              x=\"110\"\n              y=\"72\"\n              fill=\"white\"\n              id=\"svg_7\"\n            >\n              E\n            </text>\n            <text\n              fontSize=\"15\"\n              fontFamily=\"Sans-serif\"\n              x=\"14\"\n              y=\"72\"\n              fill=\"white\"\n              id=\"svg_9\"\n            >\n              W\n            </text>\n\n            <circle\n              fill={windTextBgColor}\n              stroke=\"#000000\"\n              cx=\"67\"\n              cy=\"67\"\n              r=\"33\"\n              id=\"svg_cwindbg\"\n            />\n            <text\n              fill={windTextFgColor}\n              stroke=\"#FFF\"\n              strokeWidth=\"0\"\n              x=\"67\"\n              y=\"82\"\n              id=\"svg_cwind\"\n              fontSize=\"48\"\n              fontFamily=\"Sans-serif\"\n              textAnchor=\"middle\"\n            >\n              {winds.speed}\n            </text>\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\nexport default Compass;\n","import React from \"react\";\nimport format from \"date-fns/format\";\n\nconst directionStringFromDirection = direction => {\n  const dirs = [\n    \"N\",\n    \"NNE\",\n    \"NE\",\n    \"ENE\",\n    \"E\",\n    \"ESE\",\n    \"SE\",\n    \"SSE\",\n    \"S\",\n    \"SSW\",\n    \"SW\",\n    \"WSW\",\n    \"W\",\n    \"WNW\",\n    \"NW\",\n    \"NNW\"\n  ];\n  const directionModulo = (direction %= 360);\n  const index =\n    Math.round((directionModulo < 0 ? direction + 360 : direction) / 22.5) % 16;\n  return dirs[index];\n};\n\nconst Summary = ({ winds, weather, loadsFlownToday, lastUpdate }) => {\n  let directionString = directionStringFromDirection(winds.direction);\n  return (\n    <div className=\"Summary\">\n      <table>\n        <tbody>\n          <tr>\n            <td>Temperature</td>\n            <td>\n              {weather.temp}\n              &deg;F\n            </td>\n          </tr>\n          <tr>\n            <td>Wind Direction</td>\n            <td>\n              {directionString} ( {winds.direction} &deg; )\n            </td>\n          </tr>\n          <tr>\n            <td>5 min High</td>\n            <td>{winds.high_5min} mph</td>\n          </tr>\n          <tr>\n            <td>10 min High</td>\n            <td>{winds.high_10min} mph</td>\n          </tr>\n          <tr>\n            <td>20 min High</td>\n            <td>{winds.high_20min} mph</td>\n          </tr>\n          <tr>\n            <td>Loads Flown Today</td>\n            <td>{loadsFlownToday}</td>\n          </tr>\n          <tr>\n            <td>Last Update</td>\n            <td>{format(lastUpdate, \"MM/DD/YY h:mm:ss A\")}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\nexport default Summary;\n","import React from \"react\";\nimport Compass from \"./Compass\";\nimport Summary from \"./Summary\";\n\nconst WeatherSection = ({\n  winds,\n  prevWindDirections,\n  weather,\n  loadsFlownToday,\n  lastUpdate\n}) => (\n  <div className=\"WeatherSection\">\n    <Compass winds={winds} prevWindDirections={prevWindDirections} />\n    <Summary\n      weather={weather}\n      winds={winds}\n      loadsFlownToday={loadsFlownToday}\n      lastUpdate={lastUpdate}\n    />\n  </div>\n);\n\nexport default WeatherSection;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport data from \"./data.json\";\nimport mapDataToState from \"./mapDataToState\";\nimport Timers from \"./Timers\";\nimport WeatherSection from \"./WeatherSection\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = mapDataToState(data.d);\n  }\n\n  fetchDataAndUpdateState() {\n    // fetch(\"http://houston.spacelandclock.com/clock5.aspx/getTimerInfo\", {\n    //   method: \"POST\",\n    //   mode: \"cors\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json; charset=utf-8\"\n    //   },\n    //   body: JSON.stringify({ param: \"data\", db: \"Dallas\" })\n    // })\n    fetch(\"https://a0lpb24ek3.execute-api.us-east-1.amazonaws.com/dev\", {\n      mode: \"cors\",\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n      .then(response => response.json())\n      // .then(json => this.setState(mapDataToState(json.d)));\n      .then(json => {\n        // const newState = mapDataToState(json.d);\n        const newState = json;\n        this.setState(prevState => ({\n          timers: newState.timers,\n          winds: newState.winds,\n          weather: newState.weather,\n          loadsFlownToday: newState.loadsFlownToday,\n          lastUpdate: newState.lastUpdate,\n          prevWindDirections: [\n            newState.winds.direction,\n            ...this.state.prevWindDirections\n          ].slice(0, 240)\n        }));\n      });\n  }\n\n  componentDidMount() {\n    window.setInterval(() => this.fetchDataAndUpdateState(), 1000);\n    // window.setInterval(() => {\n    //   this.setState(prevState => ({\n    //     ...prevState,\n    //     winds: {\n    //       ...prevState.winds,\n    //       direction: prevState.winds.direction + 1,\n    //       speed: prevState.winds.speed + 1\n    //     },\n    //     prevWindDirections: [\n    //       prevState.winds.direction,\n    //       ...this.state.prevWindDirections\n    //     ].slice(0, 240)\n    //   }));\n    // }, 1000);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Timers timers={this.state.timers} />\n        <WeatherSection {...this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}